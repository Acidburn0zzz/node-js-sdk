0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/Cellar/node/4.2.1/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'publish',
1 verbose cli   'loginradius-sdk',
1 verbose cli   '--access',
1 verbose cli   'public' ]
2 info using npm@2.14.7
3 info using node@v4.2.1
4 verbose publish [ 'loginradius-sdk' ]
5 silly cache add args [ 'loginradius-sdk', null ]
6 verbose cache add spec loginradius-sdk
7 silly cache add parsed spec Result {
7 silly cache add   raw: 'loginradius-sdk',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: 'loginradius-sdk',
7 silly cache add   spec: '/Users/ZoieCarnegie/GitHub/sdk-node-js-customer-identity/node_modules/loginradius-sdk',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/ZoieCarnegie/.npm/loginradius-sdk/3.0.0/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/ZoieCarnegie/.npm/loginradius-sdk/3.0.0/package.tgz',
9 verbose tar pack   '/Users/ZoieCarnegie/GitHub/sdk-node-js-customer-identity/node_modules/loginradius-sdk' ]
10 verbose tarball /Users/ZoieCarnegie/.npm/loginradius-sdk/3.0.0/package.tgz
11 verbose folder /Users/ZoieCarnegie/GitHub/sdk-node-js-customer-identity/node_modules/loginradius-sdk
12 info prepublish loginradius-sdk@3.0.0
13 verbose addLocalTarball adding from inside cache /Users/ZoieCarnegie/.npm/loginradius-sdk/3.0.0/package.tgz
14 silly cache afterAdd loginradius-sdk@3.0.0
15 verbose afterAdd /Users/ZoieCarnegie/.npm/loginradius-sdk/3.0.0/package/package.json not in flight; writing
16 verbose afterAdd /Users/ZoieCarnegie/.npm/loginradius-sdk/3.0.0/package/package.json written
17 silly publish { name: 'loginradius-sdk',
17 silly publish   version: '3.0.0',
17 silly publish   description: 'An LoginRadius SDK for node.js',
17 silly publish   contributors:
17 silly publish    [ { name: 'LoginRadius Team', email: 'support@loginradius.com' },
17 silly publish      { name: 'Zoie Carnegie', email: 'zoie.carnegie@gmail.com' } ],
17 silly publish   homepage: 'https://www.loginradius.com',
17 silly publish   directories: { sdk: './sdk' },
17 silly publish   main: './lr.js',
17 silly publish   engines: { node: '>= 0.6.x' },
17 silly publish   dependencies: { request: '~2.11.5', underscore: '~1.8.3' },
17 silly publish   devDependencies:
17 silly publish    { nodeunit: '>=0.5.0',
17 silly publish      xml2js: '>=0.1.0',
17 silly publish      yaml: '>=0.2.0',
17 silly publish      iconv: '>=1.0.0' },
17 silly publish   readme: '# LoginRadius Combined SDK for Node.js\n\nLoginRadius Combined Node SDK features a combined SDK set to encompass Social Login, Customer Registration and Custom Object\n\n# Getting Started\n\n## Configuration\n- Edit server.js\n- Replace the placeholders in the config object with your LoginRadius credentials\n- apikey, apisecret, sitename\n\n## Running the Demo\n\nrun node server.js at command line\n\nNavigate to localhost:3000 in a web browser after server started messages has been given. You will see a menu which allows you to select Social Login or User Registration.\n\n## API Examples\n\n### SocialLogin API\n\n#### Get Access token\nhttp://apidocs.loginradius.com/docs/access-token\n\n\tlr.getAccessToken( token );\n\t\n#### Get User Profile Data\nhttp://apidocs.loginradius.com/docs/user-profile\n\n\tlr.getUserProfile( accesstoken );\n\n#### Get photo Albums Data\nhttp://apidocs.loginradius.com/docs/album\n\n\tlr.getAlbums( accesstoken );\n\t\n#### Get photos Data\nhttp://apidocs.loginradius.com/docs/photo\n\n\tlr.getPhotos( accesstoken, albumId );\n\t\n#### Get Checkins Data\nhttp://apidocs.loginradius.com/docs/check-in\n\n\tlr.getCheckins( accesstoken );\n\n#### Get Audio Data\nhttp://apidocs.loginradius.com/docs/audio\n\n\tlr.getAudios( accesstoken );\n\t\n#### Get Contacts Data\nhttp://apidocs.loginradius.com/docs/contact\n\n\tlr.getContacts( accesstoken, 0 );\n\t\n#### Get Mentions Data\nhttp://apidocs.loginradius.com/docs/mention\n\n\tlr.getMentions( accesstoken );\n\n#### Get Following Data\nhttp://apidocs.loginradius.com/docs/following\n\n\tlr.getFollowings( accesstoken );\n\t\n#### Get Events Data\nhttp://apidocs.loginradius.com/docs/event\n\n\tlr.getEvents( accesstoken );\n\t\n#### Get Posts Data\nhttp://apidocs.loginradius.com/docs/post\n\n\tlr.getPosts( accesstoken );\n\t\n#### Get Followed Companies Data\nhttp://apidocs.loginradius.com/docs/following\n\n\tlr.getCompanies( accesstoken );\n\t\n#### Get groups Data\nhttp://apidocs.loginradius.com/docs/group\n\n\tlr.getGroups( accesstoken );\n\t\n#### Get status Data\nhttp://apidocs.loginradius.com/docs/get-status-posting\n\n\tlr.getStatuses( accesstoken );\n\t\n#### Get Videos Data\nhttp://apidocs.loginradius.com/docs/video\n\n\tlr.getVideos( accesstoken );\n\t\n#### Get Likes Data\nhttp://apidocs.loginradius.com/docs/like\n\n\tlr.getLikes( accesstoken );\n\t\n#### Get Pages Data\nhttp://apidocs.loginradius.com/docs/page\n\n\tlr.getPage( access_token, pagename );\n\t\t\n#### Post Status Data\nhttp://apidocs.loginradius.com/docs/post-status-posting\n\n\tlr.postStatus( accesstoken, title, url, status, imageurl, caption, description );\n\t\n#### Send Message Data\nhttp://apidocs.loginradius.com/docs/post-message\n\n\tlr.postMessage( accesstoken, to, subject, message );\n\n\n### User Registration API\n\n#### User Authentication (GET)\nThis API is used to authenticate users and returns the profile data associated with the authenticated user.\nhttp://apidocs.loginradius.com/docs/user-authentication\n\n\tlr.getUserAuthentication( username, password );\n\n#### User Create (POST)\nThis API is used to create a new user on your site. This API bypasses the normal email verification process and manually creates the user for your system.\nhttp://apidocs.loginradius.com/docs/create-user\n\n\tlr.postUserCreate( formData );\n\n#### User Create Registration Profile (POST)\nThis API is used to create a user using the currently logged in social provider.\nhttp://apidocs.loginradius.com/docs/create-user-registration-profile\n\n\tlr.postUserCreateRegistrationProfile( formData );\n\t\n#### Delete User with Email Confirmation (GET)\nThis API is used to remove an user\'s account from LoginRadius system. For security and mis-click concerns, it will send a delete confirmation email to user\'s email inbox to ask user to confirm the action.\nhttp://apidocs.loginradius.com/docs/user-delete-with-email-confirmation\n\n\tlr.getUserDeleteWithEmailConfirm( id, link, template );\n\n#### User Email Add/Remove (POST)\nThis API is used to add or remove a particular email from one user\'s account.\nhttp://apidocs.loginradius.com/docs/user-email-set\n\n\tlr.postUserEmailAddRemove( formData );\n\n#### User Check Email Availability (GET)\nThis API is used to check the availability of an email from your Customer registration system.\nhttp://apidocs.loginradius.com/docs/user-email-availability-server\n\n\tlr.getUserEmailAvailability( email );\n\n#### User Forgot Password Token (GET)\nThis API generates a forgot password token so you can manually pass into the reset password page and reset some\'s password.\nhttp://apidocs.loginradius.com/docs/user-password-forgot-token\n\n\tlr.getUserPasswordForgotToken( email );\n\n#### User Register\nThis API used to register user from server side, verification email will be send to provided email address\nhttp://apidocs.loginradius.com/docs/registration-api\n\n\tlr.postUserRegistration( formData );\n\t\n\n#### User Update (POST)\nThis API is used to Modify/Update details of an existing user.\nhttp://apidocs.loginradius.com/docs/update-user\n\n\tlr.postUserUpdate( formData );\n\n\n#### Get User Profile By User ID\nThis API retrieves the profile data associated with the specific user using the users unique UserID.\nhttp://apidocs.loginradius.com/docs/get-user-profile\n\n\tlr.getUserProfileById( userid );\n\n#### Get User Profile By Email\nThis API retrieves the profile data associated with the specific user using the passing in email address.\nhttp://apidocs.loginradius.com/docs/user-profile-by-email\n\n\tlr.getUserProfileByEmail( email );\n\n### Account API\n\n#### Link Account\nThis API is used to link a user account with a specified providers user account.\nhttp://apidocs.loginradius.com/docs/link-user\n\n\tlr.postAccountLink( formData );\n\n#### Unlink Account\n\n\tlr.postAccountUnlink( formData );\n\t\n#### Block/Unblock Account\nThis API is used to block or un-block a user using the users unique UserID (UID).\nhttp://apidocs.loginradius.com/docs/account-blockunblock\n\n\tlr.postUserAccountBlockUnblock( formData );\n\n#### Get User Profiles\nThis API is used to retrieve all of the profile data from each of the linked social provider accounts associated with the account. For ex: A user has linked facebook and google account then this api will retrieve both profile data.\nhttp://apidocs.loginradius.com/docs/get-user-profiles\n\n\tlr.getAccountProfiles( uid );\n\n#### Account Delete\nDelete an account from your LoginRadius app.\nhttp://apidocs.loginradius.com/docs/account-delete\n\n\tlr.getAccountDelete( uid, callback );\n\n#### Change Account Password\nThis API is used to change the password field of an account, you need to know the old password before you change it.\nhttp://apidocs.loginradius.com/docs/account-password-change\n\n\tlr.postAccountPasswordChange( formData );\n\n#### Get Account Password\nThis API is used to get the password field of an account.\nhttp://apidocs.loginradius.com/docs/account-password-get\n\n\tlr.getAccountPassword( uid );\n\n#### Set Account Password\nThis API is used to set a password for an account. It does not require to know the previous(old) password.\nhttp://apidocs.loginradius.com/docs/account-password-set\n\n\tlr.postAccountPasswordSet( formData );\n\n#### Change UserName\nThis API is used for changing user name by account Id.\nhttp://apidocs.loginradius.com/docs/user-name-change\n\n\tlr.postAccountUsernameChange( formData );\n\n#### Check UserName\nThis API is used to check username exists or not on your site.\nhttp://apidocs.loginradius.com/docs/user-name-check-server\n\n\tlr.getAccountUsernameCheck( username );\n\n#### Set UserName\nThis API is used for set user name by user Id.\nhttp://apidocs.loginradius.com/docs/user-name-set\n\n\tlr.postAccountUsernameSet( formData );\n\n#### Resend Email Verification\nThis API is used to generate an email-token that can be sent out to a user in a link in order to verify their email.\nhttp://apidocs.loginradius.com/docs/verification-email-resend\n\n\tlr.getUserEmailVerificationResend( email, link, template );\n\n### Custom Object API\n\n#### Custom Object Create/Update (POST)\nThis API is used to write information in JSON format to the custom object for the specified account.\nhttp://apidocs.loginradius.com/docs/save-custom-object\n\n\tlr.postObjectCreateUpdate( objectid, uid, formData );\n\n#### Custom Object by Account ID (GET)\nThis API is used to retrieve all of the custom objects by account ID (UID).\nhttp://apidocs.loginradius.com/docs/get-custom-object-by-account-id\n\n\tlr.getObjectByAccountId( objectid, uid  );\n\t\n#### Custom Object by Multiple Account IDs (GET)\nThis API is used to retrieve all of the custom objects via a list of account IDs(UID) separated by , (Max 20).\nhttp://apidocs.loginradius.com/docs/get-custom-object-by-multiple-account-ids\n\n\tlr.getObjectByAccountIds( objectid, uids  );\n\n#### Custom Object Check (GET)\nThis API is used to check the presence of a Custom Object for the specified account ID(UID)\nhttp://apidocs.loginradius.com/docs/custom-object-check\n\n\tlr.getObjectCheck( objectid, uid  );\n\n#### Custom Objects by Query (GET)\nThis API is used to retrieve all of the Custom Objects based on the specified query.\nhttp://apidocs.loginradius.com/docs/get-custom-objects-by-query\n\n\tlr.getObjectByQuery( objectid, query, cursor );\n\n#### Custom Object by Object ID (GET)\nThis API is used to retrieve all of the Custom objects based on the Object ID.\nhttp://apidocs.loginradius.com/docs/get-all-custom-object-records\n\n\tlr.getObjectByObjectId( objectid, cursor );\n\n#### Custom Object Delete (POST)\nThis API is used to remove the specified Custom Object based on the account ID(UID).\nhttp://apidocs.loginradius.com/docs/delete-custom-object\n\n\tlr.postObjectDelete( objectid, uid );\n\n#### Custom Object Stats (GET)\nThis API is used to get the current storage information for a specified Custom Object.\nhttp://apidocs.loginradius.com/docs/get-custom-object-stats\n\n\tlr.getObjectStats( objectid );\n\n\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   _id: 'loginradius-sdk@3.0.0',
17 silly publish   scripts: {},
17 silly publish   _shasum: '5837ea023dc6da5a6ca7fef643d8e1e380dd5e7a',
17 silly publish   _from: 'node_modules/loginradius-sdk',
17 silly publish   _resolved: 'file:node_modules/loginradius-sdk' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name loginradius-sdk
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/loginradius-sdk
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /Users/ZoieCarnegie/.npm/loginradius-sdk/3.0.0/package.tgz
25 verbose request uri https://registry.npmjs.org/loginradius-sdk
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 1:50:27 PM
28 verbose request using bearer token for auth
29 verbose request id ea9cdb950705ae36
30 http request PUT https://registry.npmjs.org/loginradius-sdk
31 http 403 https://registry.npmjs.org/loginradius-sdk
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=300',
32 verbose headers   'content-length': '95',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Tue, 23 Feb 2016 20:50:28 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-sjc3121-SJC',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1456260628.100537,VS0,VE171' }
33 verbose request invalidating /Users/ZoieCarnegie/.npm/registry.npmjs.org/loginradius-sdk on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 3.0.0." : loginradius-sdk
35 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
35 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
35 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
35 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:198:22)
35 verbose stack     at emitTwo (events.js:87:13)
35 verbose stack     at Request.emit (events.js:172:7)
35 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1063:14)
35 verbose stack     at emitOne (events.js:82:20)
35 verbose stack     at Request.emit (events.js:169:7)
35 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1009:12)
36 verbose statusCode 403
37 verbose pkgid loginradius-sdk
38 verbose cwd /Users/ZoieCarnegie/GitHub/sdk-node-js-customer-identity/node_modules
39 error Darwin 15.3.0
40 error argv "/usr/local/Cellar/node/4.2.1/bin/node" "/usr/local/bin/npm" "publish" "loginradius-sdk" "--access" "public"
41 error node v4.2.1
42 error npm  v2.14.7
43 error code E403
44 error "You cannot publish over the previously published version 3.0.0." : loginradius-sdk
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
